-- insomnia test flags:
-- eval: True

module __BOOT = assume {
  sig intAdd :: Int -> Int -> Int
  sig ifIntLt :: forall (a :: *) . Int -> Int -> ({} -> a) -> ({} -> a) -> ({} -> a)

  module Distribution {
    sig choose :: forall (a :: *) . Real -> Dist a -> Dist a -> Dist a
  }

}

module Prelude {
  sig (+) :: Int -> Int -> Int
  fun (+) x y = __BOOT.intAdd x y

  data Bool = True | False

  fun (<) x y = __BOOT.ifIntLt x y (\ _v -> True) (\_v -> False) {}


  fun flip d = __BOOT.Distribution.choose d (return True) (return False)
}

module M {

  import Prelude

  val x = (1 + 1) < 3

}

model Flip {
  val coin1 ~ Prelude.flip 0.5
}

query sample Flip 3