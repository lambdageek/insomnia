
model type DIST_PARAMS {
  type NormalParams = { μ :: Real ; σ :: Real }

  parameter sig normal :: NormalParams -> Dist Real
}

model DistParams :: DIST_PARAMS {
   type NormalParams = { μ :: Real ; σ :: Real }

   parameter sig normal :: NormalParams -> Dist Real
}

model N {
  sig h :: Real
  val h ~ DistParams.normal { μ = 1.0, σ = 1.0 }

  parameter sig (.+) :: Real -> Real -> Real

  infixl .+ 6

  sig z :: Real
  val z = let
    { p = { μ = 1.0, σ = 1.0 }
    } in case p of
    { { μ = μ, σ = σ } -> μ .+ σ
    }
}
