-- insomnia test flags:
-- eval: False

module type DIST_PARAMS {
  type NormalParams = { μ : Real ; σ : Real }

  sig normal : NormalParams -> Dist Real
}

module DistParams : DIST_PARAMS {
   type NormalParams = { μ : Real ; σ : Real }

   module Assume = assume {
     sig normal : NormalParams -> Dist Real
   }
   import Assume
}

model type N_SIG {
  sig h : Real

  sig z : Real
}

model N : N_SIG {
  sig h : Real
  val h ~ DistParams.normal { μ = 1.0, σ = 1.0 }

  module Assume = assume {
    parameter sig (.+) : Real -> Real -> Real
  }
  import Assume

  infixl .+ 6

  -- sig z : Real
  val z = let
    p = { μ = 1.0, σ = 1.0 }
    q = p -- (just to check that let bindings scope correctly)
    in case q of
      -- annoying parser bug here: without the parens, the parser
      -- treats the braces as beginning an explicitly delimited case block
      ({ μ = μ, σ = σ }) -> μ .+ σ
    
}
