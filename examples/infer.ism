-- insomnia test flags:
-- eval: False

import "examples/Prelude.ism" (module Prelude)

----------------------------------------

Flip = model {
  val coin1 ~ Prelude.flip 0.5

}

-- LATENT = module type {
--   sig coin1 : Prelude.Bool
-- }

OBS = module type {
  sig coin2 : Prelude.Bool
}

-- ObservationKernel = (L : LATENT) -> model {
--   val coin2 ~
--     case L.coin1 of
--       Prelude.True -> Prelude.flip 0.9
--       Prelude.False -> Prelude.flip 0.1
-- }

-- Condition = (O : OBS) -> module {
--   val condition = O.coin2 -- coin2 came out True
-- }

-- model Flip2 = infer Flip observe ObservationKernel where Condition

-- query sample Flip2 3

FullModel = model  {
  F ~ Flip
  ObservationKernel = model {
    val coin2 ~
      case F.coin1 of
        Prelude.True -> Prelude.flip 0.9
        Prelude.False -> Prelude.flip 0.1
  }
}

M : OBS = module {
  val coin2 = Prelude.True
}

Flip3 = observe FullModel where ObservationKernel is M