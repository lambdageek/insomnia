-- Example tprob file.

data T (a :: ⋆) = L a | R a

data Mu (c :: ⋆ → ⋆) = Mu (c (Mu c))

-- sig declarations declare the type of an identifier.
sig tToM :: forall (a ∷ ⋆) (m ∷ ⋆ → ⋆) . T a → m a

-- There's also an ASCII syntax
sig id :: forall (a :: *) . a -> a

-- fun declarations provide a definition.
fun id x = x

sig flip :: forall (a :: *) (b :: *) (g :: *) . a -> b -> (b -> a -> g) -> g

fun flip x y κ = κ y x

fun h i = -- bindings are of the form v or (v :: ty)
  let
    { myid = id      {- value assignment -}
    ; x ~ flip 0.5   {- sampling from a distribution -}
    ; y ~ flip 0.9
    }
  in or x y


fun i v w = λ x y . x w (y v)

